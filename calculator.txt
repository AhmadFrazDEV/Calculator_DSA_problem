#include<iostream>
#include<stack>
#include <ctype.h>
using namespace std;
class Solution{
	public:
		
		int operators(char op){ 
    if(op == '+'||op == '-') 
    return 1; 
    if(op == '*'||op == '/') 
    return 2; 
    return 0; 
} 


int maths(int a, int b, char op){ 
    switch(op){ 
        case '+': return a + b; 
        case '-': return a - b; 
        case '*': return a * b; 
        case '/': return a / b; 
    } 
  return 0;
} 
		
		int calculate(string s)
		{	
			int i;
			stack<int> number;
			stack<char> ops;
			for(i = 0 ; i< s.length() ; i++)
			{
				if(s[i] == ' ')
					continue;
				else if(s[i] == '(')
					ops.push(s[i]);
				else if(isdigit(s[i])){
				 	int val = 0;
				while(i<s.length() && isdigit(s[i]))	 
				{
					val = (val * 10) + (s[i] - '0');
					i++;
				}
				number.push(val);
				}
				else if(s[i] == ')')
				{
					while(!ops.empty() && ops.top() != '(')
					{
						int val2 = number.top();
						number.pop();
						
						int val1 = number.top();
						number.pop();
						
						char op = ops.top();
						ops.pop();
						
						number.push(maths(val1 , val2 , op));
					}
					ops.pop();
				}
				else
				{
					while(!ops.empty() && operators(ops.top()) >= operators(s[i]))
					{
						int val2 = number.top();
						number.pop();
						
						int val1 = number.top();
						number.pop();
						
						char op = ops.top();
						ops.pop();
						
						number.push(maths(val1 , val2 , op));
					}
					ops.pop();
				}
				
				while(!ops.empty()){ 
        int val2 = number.top(); 
        number.pop(); 

        int val1 = number.top(); 
        number.pop(); 

        char op = ops.top(); 
        ops.pop(); 

        number.push(maths(val1, val2, op)); 
    } 
  	
		}
		  return number.top();
		
}
};


int main()
{
	
	Solution s;
	cout << "The output is"<< s.calculate("3 + 4 * 2 + ( 23 - 5 )");
	
	return 0;
	
}